# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        answer=curr=ListNode(-101)
        while l1 or l2:
            value1=value2=None
            if l1:
                value1=l1.val
            if l2:
                value2=l2.val
            #if l1 is empty we only output l2 elements
            if value1==None and value2!=None:
                curr.next=ListNode(value2)
                curr=curr.next
                l2=l2.next
            #if l2 is empty we only output l1 elements
            elif value1!=None and value2==None:
                curr.next=ListNode(value1)
                curr=curr.next
                l1=l1.next
            #If both are not empty,we compare
            else:
                if value1<value2:
                    curr.next=ListNode(value1)
                    curr=curr.next
                    l1=l1.next
                else:
                    curr.next=ListNode(value2)
                    curr=curr.next
                    l2=l2.next
        return answer.next
